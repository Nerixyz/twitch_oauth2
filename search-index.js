var searchIndex = JSON.parse('{\
"twitch_oauth2":{"doc":"github crates-io docs-rs","t":[7,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,4,7,8,13,13,13,13,13,13,13,13,13,3,7,3,13,13,12,12,11,11,11,11,0,10,12,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,0,11,11,11,10,12,12,11,12,5,10,12,12,5,11,0,10,12,11,11,11,11,10,10,0,11,11,11,11,11,11,10,12,12,5,11,11,11,13,13,13,4,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,6,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,12,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,3,13,4,3,8,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,11,11,0,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,11,11,10,11,11,12,12,11,10,11,11,12,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,13,4,13,13,13,13,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["AUTH_URL","AnalyticsReadExtensions","AnalyticsReadGames","AppAccessToken","BitsRead","ChannelEditCommercial","ChannelManageBroadcast","ChannelManageExtensions","ChannelManageRedemptions","ChannelManageVideos","ChannelModerate","ChannelReadEditors","ChannelReadHypeTrain","ChannelReadRedemptions","ChannelReadStreamKey","ChannelReadSubscriptions","ChannelSubscriptions","ChatEdit","ChatRead","ClipsEdit","ModerationRead","Other","REVOKE_URL","Scope","TOKEN_URL","TwitchToken","UserEdit","UserEditBroadcast","UserEditFollows","UserManageBlockedUsers","UserReadBlockedUsers","UserReadBroadcast","UserReadEmail","UserReadFollows","UserReadSubscriptions","UserToken","VALIDATE_URL","ValidatedToken","WhispersEdit","WhispersRead","access_token","access_token","borrow","borrow","borrow_mut","borrow_mut","client","client_id","client_id","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","equivalent","expires_in","expires_in","fmt","fmt","fmt","from","from","from","from","id","into","into","is_elapsed","login","login","login","ne","never_expiring","refresh_token","refresh_token","refresh_token","refresh_token","revoke_token","revoke_token","scopes","scopes","scopes","serialize","to_owned","to_owned","to_string","token","token_type","tokens","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","user_id","validate_token","validate_token","vzip","vzip","InvalidHeaderName","InvalidHeaderValue","Surf","SurfError","borrow","borrow_mut","fmt","fmt","from","from","from","into","reqwest_http_client","source","surf_http_client","to_string","try_from","try_into","type_id","vzip","TwitchClient","TwitchTokenErrorResponse","TwitchTokenResponse","access_token","access_token","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","expires_in","expires_in","extra_fields","fmt","fmt","fmt","from","from","into","into","message","refresh_token","refresh_token","scopes","scopes","serialize","serialize","status","to_owned","to_owned","to_string","token_type","token_type","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnalyticsReadExtensions","AnalyticsReadGames","BitsRead","ChannelEditCommercial","ChannelManageBroadcast","ChannelManageExtensions","ChannelManageRedemptions","ChannelManageVideos","ChannelModerate","ChannelReadEditors","ChannelReadHypeTrain","ChannelReadRedemptions","ChannelReadStreamKey","ChannelReadSubscriptions","ChannelSubscriptions","ChatEdit","ChatRead","ClipsEdit","ModerationRead","Other","Scope","UserEdit","UserEditBroadcast","UserEditFollows","UserManageBlockedUsers","UserReadBlockedUsers","UserReadBroadcast","UserReadEmail","UserReadFollows","UserReadSubscriptions","WhispersEdit","WhispersRead","all","as_oauth_scope","parse","AppAccessToken","AppAccessToken","BearerTokenType","ImplicitUserTokenBuilder","TwitchToken","UserToken","UserToken","UserTokenBuilder","ValidatedToken","access_token","access_token","add_scope","add_scope","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","client_id","client_id","client_id","client_id","clone","clone","clone","clone_into","clone_into","clone_into","eq","equivalent","errors","expires_in","expires_in","expires_in","expires_in","fmt","fmt","fmt","force_verify","force_verify","from","from","from","from","from","from_existing","from_existing","from_existing_unchecked","from_existing_unchecked","generate_url","generate_url","get_app_access_token","get_user_token","get_user_token","into","into","into","into","into","is_elapsed","login","login","login","login","login","never_expiring","new","new","refresh_token","refresh_token","refresh_token","refresh_token","refresh_token","revoke_token","scopes","scopes","scopes","scopes","set_scopes","set_scopes","set_secret","to_owned","to_owned","to_owned","token","token","token","token_type","token_type","token_type","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_id","user_id","user_id","user_id","user_id","validate_token","vzip","vzip","vzip","vzip","vzip","DeserializeError","DeserializeError","ImplicitUserTokenExchangeError","NoClientSecretFound","NoExpiration","NoLogin","NoRefreshToken","NotAuthorized","Other","ParseError","ParseError","ParseError","ParseError","RefreshTokenError","Request","Request","RequestError","RequestError","RequestError","RevokeTokenError","StateMismatch","StateMismatch","TokenError","TwitchError","TwitchError","TwitchError","TwitchError","UserTokenExchangeError","ValidationError","ValidationError","ValidationError","ValidationError","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","source","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","description","error"],"q":["twitch_oauth2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twitch_oauth2::client","","","","","","","","","","","","","","","","","","","","twitch_oauth2::id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twitch_oauth2::scopes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twitch_oauth2::tokens","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twitch_oauth2::tokens::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","twitch_oauth2::tokens::errors::ImplicitUserTokenExchangeError",""],"d":["Authorization URL for <code>id.twitch.tv</code>","View analytics data for the Twitch Extensions owned by …","View analytics data for the games owned by the …","An App Access Token from the OAuth client credentials flow","View Bits information for a channel.","Run commercials on a channel.","Manage a channel’s broadcast configuration, including …","Manage a channel’s Extension configuration, including …","Manage Channel Points custom rewards and their …","Manage a channel’s videos, including deleting videos.","Perform moderation actions in a channel. The user …","View a list of users with the editor role for a channel.","View Hype Train information for a channel.","View Channel Points custom rewards and their redemptions …","View an authorized user’s stream key.","View a list of all subscribers to a channel and check if …","[DEPRECATED] Read all subscribers to your channel.","Send live stream chat and rooms messages.","View live stream chat and rooms messages.","Manage Clips for a channel.","View a channel’s moderation data including Moderators, …","Other scope that is not implemented.","Revokation URL for <code>id.twitch.tv</code>","Scopes for twitch.","Token URL for <code>id.twitch.tv</code>","Trait for twitch tokens to get fields and generalize over …","Manage a user object.","Edit your channel’s broadcast configuration, including …","Edit a user’s follows.","Manage the block list of a user.","View the block list of a user.","View a user’s broadcasting configuration, including …","Read an authorized user’s email address.","View the list of channels a user follows.","View if an authorized user is subscribed to specific …","An User Token from the OAuth implicit code flow or OAuth …","Validation URL for <code>id.twitch.tv</code>","Token validation returned from …","Send whisper messages.","View your whisper messages.","The access token used to authenticate requests with","The access token used to authenticate requests with","","","","","Provides different http clients","Client ID associated with the token. Twitch requires this …","Client ID associated with the token. Twitch requires this …","","","","","","","","","Get current lifetime of token.","Lifetime of the token","","","","","","","","Representation of oauth2 flow in <code>id.twitch.tv</code>","","","Returns whether or not the token is expired.","Get the username associated to this token","Username of user associated with this token","Username associated with the token","","Token will never expire","Refresh the token, call if it has expired.","Refresh this token, changing the token to a newer one","The refresh token used to extend the life of this user …","The refresh token used to extend the life of this user …","Revoke the token.","Revoke the token. See …","Module for all possible scopes in twitch.","Retrieve scopes attached to the token","Scopes attached to the token.","","","","","Get the [AccessToken] for authenticating","Get the type of token.","Twitch token types","","","","","","","Get the user id associated to this token","User ID of the user associated with this token","User ID associated with the token","Validate this token.","Validate this token. Should be checked on regularly, …","","","could not construct header name","could not construct header value","surf failed to do the request: {0}","Possible errors for [surf_http_client][http_client]","","","","","","","","","Asynchronous HTTP client.","","Asynchronous HTTP client using [Surf][surf::Client]","","","","","","Client for Twitch OAuth2","Twitch’s representation of the oauth flow for errors","Twitch’s representation of the oauth flow.","","Access token","","","","","","","","","","","","Time (in seconds) until token expires","Extras","","","","","","","","Message attached to error","","Token that can be used to refresh","","Scopes attached to token","","","Status code of error","","","","","Token type","","","","","","","","","View analytics data for the Twitch Extensions owned by …","View analytics data for the games owned by the …","View Bits information for a channel.","Run commercials on a channel.","Manage a channel’s broadcast configuration, including …","Manage a channel’s Extension configuration, including …","Manage Channel Points custom rewards and their …","Manage a channel’s videos, including deleting videos.","Perform moderation actions in a channel. The user …","View a list of users with the editor role for a channel.","View Hype Train information for a channel.","View Channel Points custom rewards and their redemptions …","View an authorized user’s stream key.","View a list of all subscribers to a channel and check if …","[DEPRECATED] Read all subscribers to your channel.","Send live stream chat and rooms messages.","View live stream chat and rooms messages.","Manage Clips for a channel.","View a channel’s moderation data including Moderators, …","Other scope that is not implemented.","Scopes for twitch.","Manage a user object.","Edit your channel’s broadcast configuration, including …","Edit a user’s follows.","Manage the block list of a user.","View the block list of a user.","View a user’s broadcasting configuration, including …","Read an authorized user’s email address.","View the list of channels a user follows.","View if an authorized user is subscribed to specific …","Send whisper messages.","View your whisper messages.","Get a vec of all defined twitch [Scopes][Scope].","Get [Scope] as an oauth2 Scope","Make a scope from a cow string","An App Access Token from the OAuth client credentials flow","Token for server-to-server requests.","Types of bearer tokens","Builder for OAuth implicit code flow","Trait for twitch tokens to get fields and generalize over …","An User Token from the OAuth implicit code flow or OAuth …","Token for making requests in the context of an …","Builder for OAuth authorization code flow","Token validation returned from …","The access token used to authenticate requests with","The access token used to authenticate requests with","Add a single scope to request","Add a single scope to request","","","","","","","","","","","Create a [<code>UserTokenBuilder</code>] to get a token with the OAuth …","Client ID associated with the token. Twitch requires this …","","","Client ID associated with the token. Twitch requires this …","","","","","","","","","Errors","Get current lifetime of token.","","","Lifetime of the token","","","","Enable or disable function to make the user able to …","Enable or disable function to make the user able to …","","","","","","Assemble token and validate it. Retrieves <code>client_id</code> and …","Assemble token and validate it. Retrieves <code>login</code>, <code>client_id</code>…","Assemble token without checks.","Assemble token without checks.","Generate the URL to request a code.","Generate the URL to request a token.","Generate app access token via OAuth client credentials …","Generate the code with the help of the authorization code","Generate the code with the help of the hash.","","","","","","Returns whether or not the token is expired.","Get the username associated to this token","","","Username of user associated with this token","Username associated with the token","Token will never expire","Create a [<code>UserTokenBuilder</code>]","Create a [<code>ImplicitUserTokenBuilder</code>]","Refresh this token, changing the token to a newer one","","","The refresh token used to extend the life of this user …","The refresh token used to extend the life of this user …","Revoke the token. See …","Retrieve scopes attached to the token","","","Scopes attached to the token.","Add scopes to the request","Add scopes to the request","Set the client secret","","","","Get the [AccessToken] for authenticating","","","Get the type of token.","","","","","","","","","","","","","","","","","","Get the user id associated to this token","","","User ID of the user associated with this token","User ID associated with the token","Validate this token. Should be checked on regularly, …","","","","","","deserializations failed","deserializations failed","Errors for [ImplicitUserTokenBuilder::get_user_token][…","no client secret found","no expiration found on new token","validation did not return a login when it was expected","no refresh token found","token is not authorized for use","got unexpected return: {0:?}","could not parse url","could not parse url","could not parse url","could not parse url","Errors for [TwitchToken::refresh_token][…","request for token failed. {0}","failed to request validation: {0}","failed to do revokation: {0}","request for token failed. {0}","request for token failed. {0}","Errors for [revoke_token][crate::revoke_token]","State CSRF does not match.","State CSRF does not match.","General errors for talking with twitch, used in […","twitch returned an unexpected status: {0}","400 Bad Request: {0}","twitch returned an unexpected error: {0}","twitch returned an error: {error:?} - {description:?}","Errors for [UserTokenBuilder::get_user_token][…","Errors for [validate_token][crate::validate_token]","could not get validation for token","could not get validation for token","could not get validation for token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Description of error","Error type"],"i":[0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,2,3,1,4,1,4,0,5,4,1,4,1,4,1,4,1,1,5,4,1,1,4,1,1,1,4,0,1,4,5,5,3,4,1,3,0,5,2,3,0,5,0,5,4,1,1,4,1,5,5,0,1,4,1,4,1,4,5,3,4,0,5,1,4,6,6,6,0,6,6,6,6,6,6,6,6,0,6,0,6,6,6,6,6,0,0,0,7,7,7,8,7,8,7,8,7,8,7,8,7,7,7,7,8,8,7,8,7,8,8,7,7,7,7,7,8,8,7,8,8,7,7,7,8,7,8,7,8,7,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,9,0,0,0,0,9,0,0,2,3,10,11,10,11,2,3,9,10,11,2,3,9,3,5,2,3,4,2,3,9,2,3,9,9,9,0,5,2,3,4,2,3,9,10,11,10,11,2,3,9,2,3,2,3,10,11,2,10,11,10,11,2,3,9,5,5,2,3,3,4,3,10,11,5,2,3,2,3,5,5,2,3,4,10,11,3,2,3,9,5,2,3,5,2,3,10,11,2,3,9,10,11,2,3,9,10,11,2,3,9,5,2,3,3,4,5,10,11,2,3,9,12,13,0,14,14,12,14,12,15,16,14,13,17,0,16,12,15,14,13,0,13,17,0,12,15,13,17,0,0,16,13,17,16,12,15,14,13,17,16,12,15,14,13,17,16,16,12,12,15,15,14,14,13,13,17,17,16,16,16,12,12,15,14,14,13,13,13,13,17,17,17,16,12,15,14,13,17,16,12,15,14,13,17,16,12,15,14,13,17,16,12,15,14,13,17,16,12,15,14,13,17,16,12,15,14,13,17,16,12,15,14,13,17,18,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["clientid",3]],null,[[],["scope",4]],[[],["validatedtoken",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["scope",4]],["bool",15]],[[],["bool",15]],[[],["duration",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["scope",3]]],[[["string",3]]],[[]],[[]],null,[[]],[[]],[[],["bool",15]],[[],[["option",4],["str",15]]],null,null,[[["scope",4]],["bool",15]],null,[[["clientsecret",3],["clientid",3],["refreshtoken",3]]],[[],[["pin",3],["box",3]]],null,null,[[["accesstoken",3],["clientid",3]]],[[],[["box",3],["pin",3]]],null,[[]],null,[[],["result",4]],[[]],[[]],[[],["string",3]],[[],["accesstoken",3]],[[],["bearertokentype",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["str",15]]],null,null,[[["accesstoken",3]]],[[],[["pin",3],["box",3]]],[[]],[[]],null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["invalidheadervalue",3]]],[[["invalidheadername",3]]],[[]],[[["httprequest",3]]],[[],[["error",8],["option",4]]],[[["httprequest",3]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["accesstoken",3]],null,[[]],[[]],[[]],[[]],[[],["twitchtokenresponse",3]],[[],["twitchtokenerrorresponse",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["duration",3]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],[["refreshtoken",3],["option",4]]],null,[[],[["option",4],["vec",3]]],null,[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[],["string",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3],["scope",4]]],[[],["scope",3]],[[],["scope",4]],null,null,null,null,null,null,null,null,null,null,null,[[["scope",4]]],[[["scope",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["clientid",3],["redirecturl",3],["clientsecret",3]],[["usertokenbuilder",3],["parseerror",4],["result",4]]],[[],["clientid",3]],[[],["clientid",3]],[[],["clientid",3]],null,[[],["appaccesstoken",3]],[[],["usertoken",3]],[[],["bearertokentype",4]],[[]],[[]],[[]],[[["bearertokentype",4]],["bool",15]],[[],["bool",15]],null,[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[["clientsecret",3],["accesstoken",3]]],[[["accesstoken",3]]],[[["option",4],["accesstoken",3],["duration",3],["option",4],["vec",3],["option",4],["string",3]],["appaccesstoken",3]],[[["duration",3],["option",4],["vec",3],["option",4],["string",3]],["usertoken",3]],[[]],[[]],[[["clientid",3],["vec",3],["clientsecret",3],["scope",4]]],[[["str",15]]],[[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],null,null,null,[[["clientid",3],["redirecturl",3],["clientsecret",3]],[["usertokenbuilder",3],["parseerror",4],["result",4]]],[[["clientid",3],["redirecturl",3]],[["implicitusertokenbuilder",3],["parseerror",4],["result",4]]],[[],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],null,null,[[],[["box",3],["pin",3]]],[[]],[[]],[[]],null,[[["vec",3],["scope",4]]],[[["vec",3],["scope",4]]],[[["option",4],["clientsecret",3]]],[[]],[[]],[[]],[[],["accesstoken",3]],[[],["accesstoken",3]],[[],["accesstoken",3]],[[],["bearertokentype",4]],[[],["bearertokentype",4]],[[],["bearertokentype",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],null,null,[[],[["pin",3],["box",3]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["parseerror",4]]],[[["validationerror",4]]],[[["error",3]]],[[]],[[]],[[]],[[["parseerror",4]]],[[]],[[["parseerror",4]]],[[["validationerror",4]]],[[["error",3]]],[[["validationerror",4]]],[[["parseerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null],"p":[[4,"Scope"],[3,"AppAccessToken"],[3,"UserToken"],[3,"ValidatedToken"],[8,"TwitchToken"],[4,"SurfError"],[3,"TwitchTokenResponse"],[3,"TwitchTokenErrorResponse"],[4,"BearerTokenType"],[3,"UserTokenBuilder"],[3,"ImplicitUserTokenBuilder"],[4,"ValidationError"],[4,"UserTokenExchangeError"],[4,"RefreshTokenError"],[4,"RevokeTokenError"],[4,"TokenError"],[4,"ImplicitUserTokenExchangeError"],[13,"TwitchError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};